#!/usr/bin/env python2
import sys
import argparse
from mutagen.easyid3 import EasyID3
import readline

"""
mp3edit - ID3v2 Editor
Uses Python with mutagen, argparse, and optionally readline modules.
Designed around the interface of the buggy ID3v1 editor "mp3info."

(c) 2009 Jacob Courtneay
Licensed under the GNU General Public License v3
For more information see http://www.gnu.org/licenses/gpl.txt
"""

def input_tag(name, id3):
	issue = "Choose %s" % name
	if name in id3:
		issue += "%s: " % id3[name]
		value = raw_input(issue)
		if not value:
			return id3[name]
	else:
		issue += ': '
		value = raw_input(issue)
	return value


parser = argparse.ArgumentParser(description='Simple ID3 editing interface.')

parser.add_argument('-t', '--title', help='Title of the track. Can only be used with one file.')
parser.add_argument('-y', '--year', dest='date', help='Album release date for track(s).')
parser.add_argument('-n', '--number', dest='tracknumber', help='Track number. Can only be used with one file.')
parser.add_argument('-i', '--interactive', action='store_true', help='Enable interactive editing.')
parser.add_argument('-s', '--sequential', action='store_true', help='Number tracks based on order specified. Requires properly named tracks and an entire album to make sense.')
parser.add_argument('files', metavar='file', nargs='+', help='File(s) to edit.')

args = parser.parse_args()

interactive = False
sequential = False
files = args.files
if args.interactive:
	interactive = args.interactive
if args.sequential:
	sequential = args.sequential
	seqnum = 1

if len(files) > 1:
	if args.title:
		print 'Warning: Assigning duplicate title to multiple tracks.'
	if args.tracknumber:
		print 'Warning: Assigning duplicate tracknumber to multiple tracks.'

for filename in files:
	try:
		id3 = EasyID3(filename)
	except:
		id3 = EasyID3()

	print "\n", filename

	for index in ('artist', 'album', 'title', 'date', 'tracknumber',):
		if index == 'tracknumber' and sequential:
			id3[index] = str(seqnum)
			seqnum += 1
		elif hasattr(args, index):
			id3[index] = getattr(args, index)
		elif interactive:
			id3[index] = input_tag(index, id3)

	id3.save(filename)

