#!/bin/sh
# Script for using ViM as a PAGER.
# Based on Bram's less.sh.
# Version 1.5.2
# git://github.com/rkitover/vimpager.git

# Just pass through if not on a tty
if [ ! -t 1 ]; then
	exec cat "$@"
fi

awk_pstree() {
	awk -v mypid=$1 '{
		cmd[$1]=$3
		ppid[$1]=$2
	}
	END {
		while (mypid != 1 && cmd[mypid]) {
			ptree=mypid " " cmd[mypid] "\n" ptree
			mypid=ppid[mypid]
		}
		print ptree
	}'
}

do_ptree() {
	ps awo pid=,ppid=,comm= | awk_pstree $$
}

# Check if called from man, perldoc or pydoc
if do_ptree | awk '$2 ~ /(^|\/)(man|perl(doc)?([0-9.]*)?|py(thon|doc|doc2))/ {t=1} END { exit 1-t }'; then
	extra_cmd="set ft=man"
fi

trap "rm -rf /tmp/vimpager_$$" HUP INT QUIT ILL TRAP KILL BUS TERM

mkdir /tmp/vimpager_$$

filename=${@:-stdin}
filename=`echo $filename | tr '/' '_'`
filename=/tmp/vimpager_${$}/$filename

case "$@" in
	# DON'T FILTER MY FUCKING TERMINAL ESCAPES. THEY ARE MINE.
	#*.gz) gunzip -c "$@" | sed -e 's/\[[^m]*m//g' -e 's/.//g' > $filename ;;
	#*.Z) uncompress -c "$@" | sed -e 's/\[[^m]*m//g' -e 's/.//g' > $filename ;;
	#*) sed -e 's/\[[^m]*m//g' -e 's/.//g' "$@" > $filename ;;
	*.gz) gunzip -c "$@" | sed -e 's/.//g' > $filename ;;
	*.Z) uncompress -c "$@" | sed -e 's/.//g' > $filename ;;
	*) sed -e 's/.//g' "$@" > $filename ;;
esac

vim -R -c 'so ~/.vim/macros/less.vim' -c "${extra_cmd:-echo}" -c "${VIMPAGER_COMMAND:-echo}" "${filename:--}" </dev/tty


rm -rf /tmp/vimpager_$$ 2>/dev/null
